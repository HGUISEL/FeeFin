package ca.uwaterloo.ece.feedet;
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.lib.Repository;
import org.junit.Test;

import ca.uwaterloo.ece.feedet.DetectionRecord;
import ca.uwaterloo.ece.feedet.bugpatterns.WrongLogicForNullChecker;
import ca.uwaterloo.ece.feedet.utils.JavaASTParser;
import ca.uwaterloo.ece.feedet.utils.Utils;

import static org.junit.Assert.*;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'j22nam' at '27/05/16 5:45 PM' with Gradle 2.13
 *
 * @author j22nam, @date 27/05/16 5:45 PM
 */
public class TestBugPatternWrongLogicForNullChcker {

	HashSet<DetectionRecord> identifiedPotentialBug = new HashSet<DetectionRecord>();

	@Test public void testSomeLibraryMethod() {

		String projectPathRoot1 = System.getProperty("user.home") + "/Documents/githubProjects/apache"; //System.getProperty("user.home") + "/X"; // "/Volumes/Faith/githubProjects/apache"; //System.getProperty("user.home") + "/Documents/githubProjects/apache";
		String projectPathRoot2 = System.getProperty("user.home") + "/Documents/githubProjects/google";

		int numOfTPs = 0;

		// TP hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java a90a187d484445823cbbd9987f0329e1dbe68ce4~1
		String projectName = "hbase";
		String gitURI = projectPathRoot1 + File.separator + projectName;
		String path = "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java";
		String shaId = "a90a187d484445823cbbd9987f0329e1dbe68ce4~1";

		detect(projectName,gitURI, path, shaId,identifiedPotentialBug);
		assertEquals(++numOfTPs,identifiedPotentialBug.size());    

		// FP iosched   c6531a72a84501db79e89647986e69345caa2808        android/src/main/java/com/google/samples/apps/iosched/explore/data/ItemGroup.java
		// 79 mId != null ? mId.equals(itemGroup.mId) : itemGroup.mId == null
		projectName = "iosched";
		gitURI = projectPathRoot2 + File.separator + projectName;
		path = "android/src/main/java/com/google/samples/apps/iosched/explore/data/ItemGroup.java";
		shaId = "c6531a72a84501db79e89647986e69345caa2808";
		
		detect(projectName,gitURI, path, shaId,identifiedPotentialBug);
		assertEquals(numOfTPs,identifiedPotentialBug.size());
		
		// FP cassandra    cd5aacc83bc3ee2b412c191a8ce711b0401bf55a        src/java/org/apache/cassandra/service/StorageService.java
		// 1133    tokens == null ? "(All tokens)" : tokens
		projectName = "cassandra";
		gitURI = projectPathRoot1 + File.separator + projectName;
		path = "src/java/org/apache/cassandra/service/StorageService.java";
		shaId = "cd5aacc83bc3ee2b412c191a8ce711b0401bf55a";
		
		detect(projectName,gitURI, path, shaId,identifiedPotentialBug);
		assertEquals(numOfTPs,identifiedPotentialBug.size());
	}

	private void detect(String prjName, String gitURI, String path, String shaId,HashSet<DetectionRecord> identifiedPotentialBug) {
		try {
			Git git;
			git = Git.open( new File(gitURI) );
			Repository repo = git.getRepository();

			String fileSource=Utils.fetchBlob(repo, shaId, path);

			fileSource = Utils.removeComments(fileSource);

			JavaASTParser preFixWholeCodeAST = new JavaASTParser(fileSource);

			process(prjName,new WrongLogicForNullChecker(prjName,preFixWholeCodeAST,shaId,path,repo).detect());

		} catch (IOException e1) {
			e1.printStackTrace();
		}
	}

	private void process(String projectName,ArrayList<DetectionRecord> detectionRecords) {
		for(DetectionRecord detRec:detectionRecords){
			if(!identifiedPotentialBug.contains(detRec)){
				identifiedPotentialBug.add(detRec);
				System.out.println(detRec.getPatternName() + "\t" 
						+ projectName + "\t"
						+ detRec.getRevID() + "\t"
						+ detRec.getLineNum() + "\t"
						+ detRec.getPath());
				System.out.println(detRec.getCode() + "\n");
			}
		}

	}
}
